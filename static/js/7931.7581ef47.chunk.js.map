{"version":3,"file":"static/js/7931.7581ef47.chunk.js","mappings":"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","sources":["constants/Data.constant.js","services/Ops.js","services/AppSetting.js","views/agents/Agents.js"],"sourcesContent":["// const mainUrl = `http://localhost:8000/`\r\nconst mainUrl = `https://api.sevenstartambola.com/`\r\nconst base = {\r\n    adminLogin: mainUrl + `adminLogin`,\r\n    saveAgent: mainUrl + `saveAgent`,\r\n    agentsList: mainUrl + `agentsList`,\r\n    editAgent: mainUrl + `editAgent`,\r\n    deleteAgent: mainUrl + `deleteAgent`,\r\n    saveUser: mainUrl + `saveUser`,\r\n    usersList: mainUrl + `usersList`,\r\n    editUser: mainUrl + `editUser`,\r\n    deleteUser: mainUrl + `deleteUser`,\r\n    // saveTicket: mainUrl + `saveTicket`,\r\n    // ticketList: mainUrl + `ticketList`,\r\n    // editTicket: mainUrl + `editTicket`,\r\n    // deleteTicket: mainUrl + `deleteTicket`,\r\n    ticketCardView: mainUrl + `ticketCardView`,\r\n    gameList: mainUrl + `gameList`,\r\n    saveGame: mainUrl + `saveGame`,\r\n    editGame: mainUrl + `editGame`,\r\n    saveAnnouncement: mainUrl + `saveAnnouncement`,\r\n    announcementList: mainUrl + `announcementList`,\r\n    editAnnouncement: mainUrl + `editAnnouncement`,\r\n    deleteAnnouncement: mainUrl + `deleteAnnouncement`,\r\n    disclaimerList: mainUrl + `disclaimerList`,\r\n    editDisclaimer: mainUrl + `editDisclaimer`,\r\n};\r\nexport { base };","import axios from \"axios\";\r\n\r\nconst postData = async (url = \"\", data, token = false) => {\r\n    // console.log(\"url\",url)\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: tokenData } };\r\n    let response = await axios.post(url, data, header);\r\n    // let response = await axios.post(url, data, { headers:  { \"Authorization\": tokenData }});\r\n    return response.data;\r\n};\r\nconst postDataContent = async (url = \"\", data, token = false, contentType) => {\r\n    let tokenData = \"\";\r\n    if (token) {\r\n        tokenData = \"Bearer \" + token;\r\n    }\r\n    // console.log('contentType', contentType)\r\n    let response = await axios.post(url, data, {\r\n        headers: { Authorization: tokenData, \"content-type\": contentType },\r\n    });\r\n    return response.data;\r\n};\r\nconst putData = async (url = \"\", data, token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.put(url, data, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nconst getData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    var header = { headers: { Authorization: token } };\r\n    let response = await axios.get(url, header);\r\n    return response.data;\r\n};\r\nconst deleteData = async (url = \"\", token = false) => {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    let response = await axios.delete(url, {\r\n        headers: { Authorization: token },\r\n    });\r\n    return response.data;\r\n};\r\nexport async function downloadFile(fileUrl, data, token = false) {\r\n    if (token) {\r\n        token = \"Bearer \" + token;\r\n    }\r\n    axios\r\n        .post(fileUrl, data, {\r\n            responseType: \"blob\",\r\n            headers: { Authorization: token },\r\n        })\r\n        .then(function (response) {\r\n            const type = response.headers[\"content-type\"];\r\n            const blob = new Blob([response.data], {\r\n                type: type,\r\n                encoding: \"UTF-8\",\r\n            });\r\n            const link = document.createElement(\"a\");\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = data.fileName;\r\n            link.click();\r\n        });\r\n}\r\n\r\nexport { postData, getData, deleteData, putData, postDataContent };\r\n","import { base } from \"src/constants/Data.constant\";\r\nimport * as opsService from \"./Ops\";\r\n\r\nconst postApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let result = await opsService.postData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, putApiCall = async (url, request) => {\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    try {\r\n        let result = await opsService.putData(\r\n            url,\r\n            request,\r\n            token\r\n        );\r\n        // console.log(\"resultPostdata\", result);\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n}, getApiCall = async (url) => {\r\n    try {\r\n        let result = await opsService.getData(\r\n            url,\r\n            false\r\n        );\r\n        return result;\r\n    } catch (e) {\r\n        return { status: false, data: {}, message: e.message };\r\n    }\r\n};\r\nexport { postApiCall, getApiCall, putApiCall };\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableCaption,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { getApiCall, postApiCall, putApiCall } from 'src/services/AppSetting';\r\nimport { base } from 'src/constants/Data.constant';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Agents = () => {\r\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\r\n  const [itemValue, setItemValue] = useState(\"\");\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [agentsData, setAgentsData] = useState([]);\r\n  const [visible, setVisible] = useState(false)\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [search, setSearch] = useState([]);\r\n\r\n  useEffect(() => {\r\n    agents_list();\r\n  }, []);\r\n\r\n  const clearFormData = async () => {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPhone(\"\");\r\n    setPassword(\"\");\r\n    setGender(\"\");\r\n    setStatus(\"\");\r\n  }\r\n  const agents_list = async () => {\r\n    let result = await getApiCall(base.agentsList)\r\n    setAgentsData(result)\r\n    setSearch(result)\r\n  }\r\n\r\n  const save_agent = async () => {\r\n    if (name == \"\") {\r\n      toast.error(\"name is mandatory\");\r\n    } else if (email == \"\") {\r\n      toast.error(\"emmail is mandatory\")\r\n    } else if (phone == \"\") {\r\n      toast.error(\"phone no. is mandatory\")\r\n    } else if (phone.length < 10) {\r\n      toast.error(\"Phone No. Should be in 10 digits\")\r\n    } else if (gender == \"\") {\r\n      toast.error(\"Please select a gender\")\r\n    } else if (status == \"\") {\r\n      toast.error(\"Please select a status\")\r\n    } else {\r\n      let req = {\r\n        name: name.target.value,\r\n        email: email.target.value,\r\n        phone: phone.target.value,\r\n        password: password,\r\n        gender: gender,\r\n        status: status,\r\n      }\r\n      // console.log(\"saveAgentApiCallreq\", req);\r\n      let result = await postApiCall(base.saveAgent, req)\r\n      if (result.code == 200) {\r\n        setVisible(false);\r\n        agents_list();\r\n        clearFormData();\r\n        toast.success(\"Successfully Created..!\");\r\n      }\r\n    }\r\n  }\r\n\r\n  const delete_agent = async (value) => {\r\n    let req = {\r\n      id: value.agents_id,\r\n      status: \"1\"\r\n    }\r\n    // console.log(\"iddddAgentreq\", req);\r\n    let result = await putApiCall(base.deleteAgent, req)\r\n    // console.log(\"iddddAgentresult\", result);\r\n    if (result.code == 200) {\r\n      agents_list();\r\n      toast.error(\"Deleted Successfully..!\");\r\n    }\r\n  }\r\n\r\n  const get_edit_value = async (item) => {\r\n    setEditModalVisible(true);\r\n    setId(item.agents_id);\r\n    setName(item.agents_name);\r\n    setEmail(item.agents_email);\r\n    setPhone(item.agents_phone);\r\n    setGender(item.agents_gender);\r\n    setStatus(item.agents_active_status);\r\n  }\r\n\r\n  const edit_agent = async () => {\r\n    let req = {\r\n      id: id,\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n      gender: gender,\r\n      status: status,\r\n    }\r\n    // console.log(\"reqreq\", req);\r\n    let result = await putApiCall(base.editAgent, req)\r\n    // console.log(\"resultresult\", result);\r\n    if (result.code == 200) {\r\n      setEditModalVisible(false)\r\n      agents_list();\r\n      toast.success(\"Updated Successfully..!\");\r\n    }\r\n  }\r\n\r\n  const randomPasswordGenerate = () => {\r\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n    let newPassword = '';\r\n    for (let i = 0; i < 8; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length);\r\n      newPassword += charset[randomIndex];\r\n    }\r\n    setPassword(newPassword);\r\n    toast.error(newPassword)\r\n    // console.log(\"newPassworddd\", newPassword);\r\n  };\r\n\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12} className='mb-4'>\r\n        <div className='d-flex justify-content-between'>\r\n          <CButton color=\"primary\" onClick={() => { setVisible(true) }} onClose={() => setVisible(false)}>Add</CButton>\r\n          <div className=\"w-25\">\r\n            <CFormInput\r\n              type=\"text\"\r\n              id=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={(e) => {\r\n                setSearch(agentsData.filter(data => data.agents_name.toLowerCase().includes((e.target.value).toLowerCase())))\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n        <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)}>\r\n          <CModalHeader>\r\n            <CModalTitle>Add</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"mb-3\">\r\n                <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  placeholder=\"Agent Name\"\r\n                  onChange={(e) => { setName(e) }}\r\n                />\r\n                <CFormLabel htmlFor=\"email\">Email address</CFormLabel>\r\n                <CFormInput\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  placeholder=\"agent@example.com\"\r\n                  onChange={(e) => { setEmail(e) }}\r\n                />\r\n                <CFormLabel htmlFor=\"phone\">Phone</CFormLabel>\r\n                <CFormInput\r\n                  type=\"text\"\r\n                  id=\"phone\"\r\n                  placeholder=\"Agent Phone\"\r\n                  onChange={(e) => { setPhone(e) }}\r\n                  maxLength={10}\r\n                />\r\n                <CFormLabel htmlFor=\"password\">Password</CFormLabel>\r\n                <div className='d-flex'>\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    placeholder=\"Agent Password\"\r\n                    // onChange={(e) => { setPassword(e) }}\r\n                    defaultValue={password}\r\n                    disabled\r\n                  />\r\n                  <CButton className='mx-1' color=\"secondary\" onClick={() => randomPasswordGenerate()}>\r\n                    Generate\r\n                  </CButton>\r\n                </div>\r\n                <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n                <CFormSelect defaultValue={gender} id=\"gender\" onChange={(e) => { setGender(e.target.value) }}>\r\n                  <option value=\"\" selected disabled>Select Gender</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                  <option value=\"Others\">Others</option>\r\n                </CFormSelect>\r\n                <CFormLabel htmlFor=\"status\">Status</CFormLabel>\r\n                <CFormSelect defaultValue={status} id=\"status\" onChange={(e) => { setStatus(e.target.value) }}>\r\n                  <option value=\"\" selected disabled>Select Status</option>\r\n                  <option value=\"Active\">Active</option>\r\n                  <option value=\"Deactive\">Deactive</option>\r\n                </CFormSelect>\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n              Cancel\r\n            </CButton>\r\n            <CButton color=\"primary\" onClick={() => save_agent()}>Save</CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardBody>\r\n            <CTable hover responsive>\r\n              <CTableHead>\r\n                <CTableRow>\r\n                  <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Email</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Phone</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Gender</CTableHeaderCell>\r\n                  <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {search.map((item, index) => {\r\n                  return <CTableRow key={index}>\r\n                    <CTableHeaderCell scope=\"row\">{index + 1}</CTableHeaderCell>\r\n                    <CTableDataCell>{item.agents_name}</CTableDataCell>\r\n                    <CTableDataCell>{item.agents_email}</CTableDataCell>\r\n                    <CTableDataCell>{item.agents_phone}</CTableDataCell>\r\n                    <CTableDataCell>{item.agents_gender}</CTableDataCell>\r\n                    <CTableDataCell>\r\n                      <CButton color=\"warning\" className='me-2' onClick={() => { get_edit_value(item) }}>Edit</CButton>\r\n                      <CModal alignment=\"center\" visible={editModalVisible}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Edit</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          <CForm>\r\n                            <div className=\"mb-3\">\r\n                              <CFormLabel htmlFor=\"name\">Name</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                placeholder=\"Agent Name\"\r\n                                onChange={(e) => { setName(e.target.value) }}\r\n                                // name={name}\r\n                                defaultValue={name}\r\n                              />\r\n                              <CFormLabel htmlFor=\"email\">Email address</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"agent@example.com\"\r\n                                onChange={(e) => { setEmail(e) }}\r\n                                defaultValue={email}\r\n                              />\r\n                              <CFormLabel htmlFor=\"phone\">Phone</CFormLabel>\r\n                              <CFormInput\r\n                                type=\"text\"\r\n                                id=\"phone\"\r\n                                placeholder=\"Agent Phone\"\r\n                                onChange={(e) => { setPhone(e) }}\r\n                                maxLength={10}\r\n                                defaultValue={phone}\r\n                              />\r\n                              <CFormLabel htmlFor=\"gender\">Gender</CFormLabel>\r\n                              <CFormSelect defaultValue={gender} id=\"gender\" onChange={(e) => { setGender(e.target.value) }}>\r\n                                <option value=\"\" selected disabled>Select Gender</option>\r\n                                <option value=\"Male\">Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                                <option value=\"Others\">Others</option>\r\n                              </CFormSelect>\r\n                              <CFormLabel htmlFor=\"status\">Status</CFormLabel>\r\n                              <CFormSelect defaultValue={status} id=\"status\" onChange={(e) => { setStatus(e.target.value) }}>\r\n                                <option value=\"\" selected disabled>Select Status</option>\r\n                                <option value=\"Active\">Active</option>\r\n                                <option value=\"Deactive\">Deactive</option>\r\n                              </CFormSelect>\r\n                            </div>\r\n                          </CForm>\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setEditModalVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => edit_agent()}>Update</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                      <CButton color=\"danger\" onClick={() => { setItemValue(item); setDeleteModalVisible(true) }}>Delete</CButton>\r\n                      <CModal alignment=\"center\" visible={deleteModalVisible} onClose={() => setDeleteModalVisible(false)}>\r\n                        <CModalHeader>\r\n                          <CModalTitle>Do You Want to Delete..</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalFooter>\r\n                          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\r\n                            Cancel\r\n                          </CButton>\r\n                          <CButton color=\"primary\" onClick={() => delete_agent(itemValue)}>Yes., Delete</CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                })}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow >\r\n  )\r\n}\r\n\r\nexport default Agents\r\n"],"names":["mainUrl","base","adminLogin","saveAgent","agentsList","editAgent","deleteAgent","saveUser","usersList","editUser","deleteUser","ticketCardView","gameList","saveGame","editGame","saveAnnouncement","announcementList","editAnnouncement","deleteAnnouncement","disclaimerList","editDisclaimer","postData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","data","token","tokenData","header","response","_args","arguments","wrap","_context","prev","next","length","undefined","headers","Authorization","axios","post","sent","abrupt","stop","apply","putData","_ref3","_callee3","_args3","_context3","put","getData","_ref4","_callee4","_args4","_context4","get","postApiCall","request","result","localStorage","getItem","opsService","t0","status","message","_x","_x2","putApiCall","_ref2","_callee2","_context2","_x3","_x4","getApiCall","_x5","_useState","useState","_useState2","_slicedToArray","deleteModalVisible","setDeleteModalVisible","_useState3","_useState4","itemValue","setItemValue","_useState5","_useState6","editModalVisible","setEditModalVisible","_useState7","_useState8","agentsData","setAgentsData","_useState9","_useState10","visible","setVisible","_useState11","_useState12","id","setId","_useState13","_useState14","name","setName","_useState15","_useState16","email","setEmail","_useState17","_useState18","phone","setPhone","_useState19","_useState20","password","setPassword","_useState21","_useState22","gender","setGender","_useState23","_useState24","setStatus","_useState25","_useState26","search","setSearch","useEffect","agents_list","clearFormData","save_agent","req","toast","error","target","value","code","success","delete_agent","agents_id","get_edit_value","_ref5","_callee5","item","_context5","agents_name","agents_email","agents_phone","agents_gender","agents_active_status","edit_agent","_ref6","_callee6","_context6","_jsxs","CRow","children","CCol","xs","className","_jsx","CButton","color","onClick","onClose","CFormInput","type","placeholder","onChange","e","filter","toLowerCase","includes","ToastContainer","CModal","alignment","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","maxLength","defaultValue","disabled","charset","newPassword","i","Math","floor","random","randomPasswordGenerate","CFormSelect","selected","CModalFooter","CCard","CCardBody","CTable","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","index","CTableDataCell"],"sourceRoot":""}