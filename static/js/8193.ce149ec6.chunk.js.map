{"version":3,"file":"static/js/8193.ce149ec6.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","../node_modules/@coreui/icons/src/brand/cib-cc-mastercard.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { Navigate, useNavigate } from 'react-router-dom'\nimport { getApiCall } from 'src/services/AppSetting'\nimport { base } from 'src/constants/Data.constant'\n\nconst Dashboard = (props) => {\n  // const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  // const progressExample = [\n  //   { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n  //   { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n  //   { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n  //   { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n  //   { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  // ]\n\n  // const progressGroupExample1 = [\n  //   { title: 'Monday', value1: 34, value2: 78 },\n  //   { title: 'Tuesday', value1: 56, value2: 94 },\n  //   { title: 'Wednesday', value1: 12, value2: 67 },\n  //   { title: 'Thursday', value1: 43, value2: 91 },\n  //   { title: 'Friday', value1: 22, value2: 73 },\n  //   { title: 'Saturday', value1: 53, value2: 82 },\n  //   { title: 'Sunday', value1: 9, value2: 69 },\n  // ]\n\n  // const progressGroupExample2 = [\n  //   { title: 'Male', icon: cilUser, value: 53 },\n  //   { title: 'Female', icon: cilUserFemale, value: 43 },\n  // ]\n\n  // const progressGroupExample3 = [\n  //   { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n  //   { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n  //   { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n  //   { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  // ]\n\n  const [agentList, setAgentList] = useState([]);\n\n  useEffect(() => {\n    agentsList();\n  }, []);\n\n  const agentsList = async () => {\n    let result = await getApiCall(base.agentsList)\n    console.log(\"agentsListResult\", result);\n    let FinalArr = [];\n    result.map((item, index) => {\n      console.log(\"itemmmm\", item, index);\n      FinalArr.push({\n        avatarrr: {\n          slno: index + 1\n        },\n        user: {\n          name: item.agents_name,\n          registered: item.created_at,\n        },\n        country: {\n          address: item.agents_address\n        },\n        usage: {\n          value: item.agents_ticket_limit,\n          // period: 'Jun 11, 2021 - Jul 10, 20211',\n          color: 'success',\n        },\n        payment: { name: 'Mastercard', icon: cibCcMastercard },\n        activity: '10 sec ago',\n      })\n    });\n    console.log(\"FinalArrFinalArr\", FinalArr);\n    setAgentList(FinalArr)\n  }\n\n  // const tableExample = [\n  //   {\n  //     avatar: { src: avatar1, status: 'success' },\n  //     user: {\n  //       name: 'Yiorgos Avraamu',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'USA', flag: cifUs },\n  //     usage: {\n  //       value: 50,\n  //       period: 'Jun 11, 2021 - Jul 10, 20211',\n  //       color: 'success',\n  //     },\n  //     payment: { name: 'Mastercard', icon: cibCcMastercard },\n  //     activity: '10 sec ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar2, status: 'danger' },\n  //     user: {\n  //       name: 'Avram Tarasios',\n  //       new: false,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Brazil', flag: cifBr },\n  //     usage: {\n  //       value: 22,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'info',\n  //     },\n  //     payment: { name: 'Visa', icon: cibCcVisa },\n  //     activity: '5 minutes ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar3, status: 'warning' },\n  //     user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n  //     country: { name: 'India', flag: cifIn },\n  //     usage: {\n  //       value: 74,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'warning',\n  //     },\n  //     payment: { name: 'Stripe', icon: cibCcStripe },\n  //     activity: '1 hour ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar4, status: 'secondary' },\n  //     user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n  //     country: { name: 'France', flag: cifFr },\n  //     usage: {\n  //       value: 98,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'danger',\n  //     },\n  //     payment: { name: 'PayPal', icon: cibCcPaypal },\n  //     activity: 'Last month',\n  //   },\n  //   {\n  //     avatar: { src: avatar5, status: 'success' },\n  //     user: {\n  //       name: 'Agapetus Tadeáš',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Spain', flag: cifEs },\n  //     usage: {\n  //       value: 22,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'primary',\n  //     },\n  //     payment: { name: 'Google Wallet', icon: cibCcApplePay },\n  //     activity: 'Last week',\n  //   },\n  //   {\n  //     avatar: { src: avatar6, status: 'danger' },\n  //     user: {\n  //       name: 'Friderik Dávid',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Poland', flag: cifPl },\n  //     usage: {\n  //       value: 43,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'success',\n  //     },\n  //     payment: { name: 'Amex', icon: cibCcAmex },\n  //     activity: 'Last week',\n  //   },\n  // ]\n\n  // { console.log(\"authenticateddd\", loginId) }\n  // if (!loginId) {\n  //   return <Navigate replace to=\"/login\" />;\n  // } else {\n  return (\n    // <>\n    //   {loginId == \"\" ? (\n    //     <Navigate replace to=\"/login\" />\n    //   ) : (\n    <>\n      <WidgetsDropdown />\n      {/* <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard> */}\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Agent {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                {/* <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol> */}\n\n                {/* <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol> */}\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">Sl./No.</CTableHeaderCell>\n                    <CTableHeaderCell>Agent Name</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Address</CTableHeaderCell>\n                    <CTableHeaderCell>Ticket Limit</CTableHeaderCell>\n                    <CTableHeaderCell>Total Ticket</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Amount</CTableHeaderCell>\n                    {/* <CTableHeaderCell>Activity</CTableHeaderCell> */}\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {agentList.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        {index + 1}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <div>{item.country.address}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        {/* <CProgress thin color={item.usage.color} value={item.usage.value} /> */}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.country.address}</div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      {/* <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell> */}\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <WidgetsBrand withCharts />\n    </>\n    //     )}\n    //   </>\n  )\n\n  // }\n}\n\nexport default Dashboard\n","export var cibCcMastercard = [\"32 32\", \"<path d='M26.828 24.572c0 0.378-0.255 0.65-0.622 0.65-0.378 0-0.622-0.289-0.622-0.65s0.244-0.65 0.622-0.65c0.367 0 0.622 0.289 0.622 0.65zM9.561 23.922c-0.395 0-0.622 0.289-0.622 0.65s0.228 0.65 0.622 0.65c0.361 0 0.605-0.272 0.605-0.65-0.006-0.361-0.244-0.65-0.605-0.65zM16.089 23.906c-0.3 0-0.484 0.194-0.528 0.483h1.061c-0.050-0.317-0.244-0.483-0.533-0.483zM22.078 23.922c-0.378 0-0.605 0.289-0.605 0.65s0.228 0.65 0.605 0.65c0.378 0 0.622-0.272 0.622-0.65 0-0.361-0.245-0.65-0.622-0.65zM27.961 25.372c0 0.017 0.017 0.028 0.017 0.061 0 0.017-0.017 0.028-0.017 0.061-0.017 0.017-0.017 0.028-0.028 0.044-0.017 0.017-0.028 0.028-0.061 0.028-0.017 0.017-0.028 0.017-0.061 0.017-0.017 0-0.028 0-0.061-0.017-0.017 0-0.028-0.017-0.044-0.028-0.017-0.017-0.028-0.028-0.028-0.044-0.017-0.028-0.017-0.044-0.017-0.061 0-0.028 0-0.044 0.017-0.061 0-0.028 0.017-0.044 0.028-0.061 0.017-0.017 0.028-0.017 0.044-0.028 0.028-0.017 0.044-0.017 0.061-0.017 0.028 0 0.044 0 0.061 0.017 0.028 0.016 0.044 0.016 0.061 0.028s0.011 0.033 0.028 0.061zM27.839 25.45c0.028 0 0.028-0.017 0.044-0.017 0.017-0.017 0.017-0.028 0.017-0.044s0-0.028-0.017-0.044c-0.016 0-0.028-0.017-0.061-0.017h-0.089v0.194h0.044v-0.078h0.017l0.061 0.078h0.044zM32 6.278v19.556c0 1.472-1.194 2.667-2.667 2.667h-26.667c-1.472 0-2.667-1.194-2.667-2.667v-19.556c0-1.472 1.194-2.667 2.667-2.667h26.667c1.472 0 2.667 1.194 2.667 2.667zM3.556 14.033c0 4.25 3.45 7.694 7.694 7.694 1.511 0 2.994-0.456 4.25-1.283-4.050-3.294-4.022-9.511 0-12.806-1.256-0.833-2.739-1.283-4.25-1.283-4.244-0.005-7.694 3.444-7.694 7.678zM16 20.078c3.917-3.056 3.9-9.011 0-12.083-3.9 3.072-3.917 9.033 0 12.083zM8.094 24.317c0-0.483-0.317-0.8-0.817-0.817-0.256 0-0.528 0.078-0.711 0.361-0.133-0.228-0.361-0.361-0.678-0.361-0.211 0-0.422 0.078-0.589 0.3v-0.244h-0.455v2.039h0.455c0-1.050-0.139-1.678 0.5-1.678 0.567 0 0.456 0.567 0.456 1.678h0.439c0-1.017-0.139-1.678 0.5-1.678 0.567 0 0.455 0.556 0.455 1.678h0.456v-1.278zM10.589 23.556h-0.439v0.244c-0.15-0.183-0.361-0.3-0.65-0.3-0.572 0-1.011 0.456-1.011 1.072 0 0.622 0.439 1.072 1.011 1.072 0.289 0 0.5-0.106 0.65-0.3v0.256h0.439zM12.839 24.978c0-0.833-1.272-0.456-1.272-0.845 0-0.317 0.661-0.266 1.028-0.061l0.183-0.361c-0.522-0.339-1.678-0.333-1.678 0.456 0 0.794 1.272 0.461 1.272 0.833 0 0.35-0.75 0.322-1.15 0.044l-0.194 0.35c0.622 0.422 1.811 0.333 1.811-0.417zM14.806 25.494l-0.122-0.378c-0.211 0.116-0.678 0.244-0.678-0.228v-0.922h0.728v-0.411h-0.728v-0.622h-0.456v0.622h-0.422v0.406h0.422v0.928c0 0.978 0.961 0.8 1.256 0.605zM15.544 24.75h1.528c0-0.9-0.411-1.256-0.967-1.256-0.589 0-1.011 0.439-1.011 1.072 0 1.139 1.256 1.328 1.878 0.789l-0.211-0.333c-0.433 0.356-1.089 0.322-1.217-0.272zM18.828 23.556c-0.255-0.111-0.644-0.1-0.844 0.244v-0.244h-0.456v2.039h0.456v-1.15c0-0.645 0.528-0.561 0.711-0.467zM19.417 24.572c0-0.634 0.645-0.839 1.15-0.467l0.211-0.361c-0.645-0.505-1.817-0.228-1.817 0.833 0 1.1 1.244 1.322 1.817 0.833l-0.211-0.361c-0.511 0.361-1.15 0.145-1.15-0.478zM23.122 23.556h-0.456v0.244c-0.461-0.611-1.661-0.266-1.661 0.772 0 1.067 1.244 1.372 1.661 0.772v0.256h0.456zM24.994 23.556c-0.133-0.067-0.611-0.161-0.844 0.244v-0.244h-0.439v2.039h0.439v-1.15c0-0.611 0.5-0.572 0.711-0.467zM27.233 22.728h-0.439v1.072c-0.456-0.605-1.661-0.283-1.661 0.772 0 1.078 1.25 1.366 1.661 0.772v0.256h0.439zM27.656 18.556v0.256h0.044v-0.256h0.105v-0.044h-0.256v0.044zM28.022 25.433c0-0.028 0-0.061-0.016-0.089-0.017-0.017-0.028-0.044-0.044-0.061s-0.044-0.028-0.061-0.044c-0.028 0-0.061-0.017-0.089-0.017-0.017 0-0.044 0.017-0.078 0.017-0.028 0.017-0.044 0.028-0.061 0.044-0.028 0.016-0.044 0.044-0.044 0.061-0.017 0.028-0.017 0.061-0.017 0.089 0 0.017 0 0.044 0.017 0.078 0 0.017 0.017 0.044 0.044 0.061 0.016 0.017 0.028 0.028 0.061 0.044 0.028 0.016 0.061 0.016 0.078 0.016 0.028 0 0.061 0 0.089-0.016 0.017-0.017 0.044-0.028 0.061-0.044s0.028-0.044 0.044-0.061c0.016-0.033 0.016-0.061 0.016-0.078zM28.2 18.506h-0.078l-0.089 0.194-0.089-0.194h-0.078v0.3h0.044v-0.228l0.089 0.194h0.061l0.078-0.194v0.228h0.061zM28.444 14.033c0-4.234-3.45-7.683-7.694-7.683-1.511 0-2.994 0.455-4.25 1.283 4.006 3.295 4.067 9.528 0 12.806 1.256 0.833 2.75 1.283 4.25 1.283 4.244 0.006 7.694-3.439 7.694-7.689z'/>\"];\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","agentList","setAgentList","useEffect","agentsList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","FinalArr","wrap","_context","prev","next","getApiCall","base","sent","console","log","map","item","index","push","avatarrr","slno","user","name","agents_name","registered","created_at","country","address","agents_address","usage","value","agents_ticket_limit","color","payment","icon","cibCcMastercard","activity","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CRow","CCol","xs","CCard","className","CCardHeader","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","CTableDataCell","period","CIcon","size","WidgetsBrand","withCharts"],"sourceRoot":""}